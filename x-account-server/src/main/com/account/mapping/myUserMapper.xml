<?xml version="1.0" encoding="UTF-8" ?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.account.mapping.myUserMapper">

	<resultMap type="com.account.domain.MyUser" id="userMap">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="phone" column="phone" />
		<result property="email" column="email" />
		<result property="uid" column="uid" />
		<result property="pwd" column="pwd" />
		<result property="lastLoginTime" column="lastLoginTime" />
		<result property="flagid" column="flagid" />
		<result property="channel_id" column="channel_id" />
		<result property="appkey" column="appkey" />
		<result property="status" column="status" />
	</resultMap>

	<select id="getUser" parameterType="int" resultType="com.account.domain.MyUser">
		select *
		from tbl_base_users where id=#{id}
	</select>

	<insert id="insertMyUser" parameterType="com.account.domain.MyUser">
		insert into tbl_base_users
		(name,phone,email,uid,pwd,lastLoginTime,flagid,channel_id,appkey,status) values
		(#{name},#{phone},#{email},#{uid},Md5(#{pwd}),#{lastLoginTime},#{flagid},#{channel_id},#{appkey},#{status})
	</insert>

	<!-- 对应userDao中的updateUser方法 -->
	<update id="updateUser" parameterType="com.account.domain.MyUser">
		update tbl_base_users set name =
		#{name},
		phone = #{phone} ,
		email = #{email} ,
		uid = #{uid} ,
		pwd =
		Md5(#{pwd})
		where id = #{id};
	</update>

	<!-- 对应userDao中的deleteUser 方法 -->
	<delete id="deleteUser" parameterType="com.account.domain.MyUser">
		delete from tbl_base_users where
		id = #{id};
	</delete>

	<!-- 对应userDao中的changePwd方法 -->
	<update id="changePwd" parameterType="com.account.domain.MyUser">
		update tbl_base_users set
		pwd =
		Md5(#{newPwd})
		where name = #{name};
	</update>

	<select id="findByName" parameterType="String" resultMap="userMap">
		select
		id,name,phone,email,uid,pwd from
		tbl_base_users where name =#{name};
	</select>

	<select id="findByEmail" parameterType="String" resultMap="userMap">
		select
		id,name,phone,email,uid,pwd from
		tbl_base_users where email =#{email};
	</select>
	
	<select id="findByPhone" parameterType="String" resultMap="userMap">
		select
		id,name,phone,email,uid,pwd from
		tbl_base_users where phone =#{phone};
	</select>

	<select id="login" parameterType="com.account.domain.MyUser" resultType="com.account.domain.MyUser">
		select
		id,name,phone,email,uid,pwd,lastLoginTime from
		tbl_base_users where name = #{name} and
		pwd = Md5(#{pwd}) and status = 1;
	</select>
	
	<select id="loginByPhone" parameterType="com.account.domain.MyUser" resultType="com.account.domain.MyUser">
		select
		id,name,phone,email,uid,pwd,lastLoginTime from
		tbl_base_users where phone = #{phone} and
		pwd = Md5(#{pwd});
	</select>
	
	<select id="loginByEmail" parameterType="com.account.domain.MyUser" resultType="com.account.domain.MyUser">
		select
		id,name,phone,email,uid,pwd,lastLoginTime from
		tbl_base_users where email = #{email} and
		pwd = Md5(#{pwd});
	</select>
	
	<select id="loginByUid" parameterType="com.account.domain.MyUser" resultType="com.account.domain.MyUser">
		select
		id,name,phone,email,uid,pwd,lastLoginTime from
		tbl_base_users where uid = #{uid};
	</select>

	<update id="updateTime" parameterType="com.account.domain.MyUser">
		update tbl_base_users set
		lastLoginTime = #{lastLoginTime} ,
		flagid = #{flagid},
		channel_id = #{channel_id},
		appkey = #{appkey}
		where name = #{name};
	</update>
	
	<update id="updateStatus" parameterType="com.account.domain.MyUser">
		update tbl_base_users set status = 1 where email = #{email}	and uid = #{uid};
	</update>
</mapper>